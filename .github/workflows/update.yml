name: Kubebuilder Update

on:
  schedule:
    - cron: '0 6 * * 1'  # Every Monday at 6am UTC
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Install Kubebuilder
        run: |
          curl -L -o kubebuilder "https://go.kubebuilder.io/dl/latest/$(go env GOOS)/$(go env GOARCH)"
          chmod +x kubebuilder
          sudo mv kubebuilder /usr/local/bin/

      - name: Configure Git for GitHub App
        id: committer
        run: |
          echo "user-id=$(gh api "/users/${{ vars.APP_SLUG }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Git Committer (GitHub App)
        run: |
          git config --global user.name '${{ vars.APP_SLUG }}[bot]'
          git config --global user.email '${{ steps.committer.outputs.user-id }}+${{ vars.APP_SLUG }}[bot]@users.noreply.github.com'

      - name: Run kubebuilder alpha update
        run: |
          kubebuilder alpha update --force --from-version v4.5.2 || echo "No update required"

      - name: Detect generated branch
        id: branch
        run: |
          BRANCH=$(git branch --show-current)
          echo "Detected branch: $BRANCH"
          echo "branch=$BRANCH" >> "$GITHUB_OUTPUT"

      - name: Push generated branch
        run: |
          git push origin "${{ steps.branch.outputs.branch }}" --force

      - name: Create GitHub App token (v2.0.6)
        id: app-token
        uses: actions/create-github-app-token@v2.0.6
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: ${{ github.event.repository.name }}

      - name: Create pull request
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ steps.branch.outputs.branch }}
        run: |
          echo "Creating PR from $BRANCH to main"

          PR_DATA=$(jq -n \
            --arg title "chore: update Kubebuilder scaffolding" \
            --arg body "This PR was created automatically using \`kubebuilder alpha update --force\`." \
            --arg head "$BRANCH" \
            --arg base "main" \
            '{title: $title, body: $body, head: $head, base: $base}')

          curl -s -X POST \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/$REPO/pulls \
            -d "$PR_DATA"

      - name: Add PR label
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ steps.branch.outputs.branch }}
        run: |
          PR_NUMBER=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            "https://api.github.com/repos/$REPO/pulls?head=$REPO:$BRANCH" \
            | jq '.[0].number')

          echo "PR number is $PR_NUMBER"

          curl -s -X POST \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/$REPO/issues/$PR_NUMBER/labels \
            -d '{"labels": ["kubebuilder-update"]}'
