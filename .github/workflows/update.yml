name: Alpha Update
permissions:
  contents: write
  issues: write

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 2"

jobs:
  alpha-update:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Install Kubebuilder (master)
        run: |
          set -euxo pipefail
          echo "$(go env GOPATH)/bin" >> "$GITHUB_PATH"
          export PATH="$(go env GOPATH)/bin:$PATH"
          if ! go install sigs.k8s.io/kubebuilder/v4/cmd/kubebuilder@master; then
            git clone --depth 1 --branch master https://github.com/kubernetes-sigs/kubebuilder /tmp/kubebuilder
            make -C /tmp/kubebuilder install
          fi
          kubebuilder version

      - name: Run kubebuilder alpha update
        run: |
          kubebuilder alpha update \
            --force \
            --push \
            --restore-path .github/workflows \
            --open-gh-issue \
            --from-version v4.5.2 \
            --output-branch test-ai-update-123

      - name: Create patch of last commit and save summary
        run: |
          git show --no-color --no-ext-diff --unified=0 HEAD > update.patch
          echo "## AI-generated Summary" > COMMENT.md
          echo "A summary of the scaffold changes is available in the attached patch file." >> COMMENT.md
          echo "You can apply the changes by checking out the 'test-ai-update-flow' branch." >> COMMENT.md

      - name: Determine update issue number
        id: find-issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          out=$(gh issue list --state open --limit 100 --json number,title,createdAt)
          issue_number=$(echo "$out" | jq -r '
            sort_by(.createdAt)
            | map(select(.title|test("^\\[Action Required\\] Upgrade the Scaffold: v[0-9.]+ -> v[0-9.]+$")))
            | last.number // empty
          ')
          echo "issue_number=${issue_number}" >> "$GITHUB_OUTPUT"

      - name: Post comment to issue
        if: ${{ steps.find-issue.outputs.issue_number != '' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue comment "${{ steps.find-issue.outputs.issue_number }}" --body-file COMMENT.md
